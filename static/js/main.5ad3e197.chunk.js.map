{"version":3,"sources":["post/user.js","post/post-date.js","post/post-content.js","post/post-options.js","post/post.js","add-form/add-form.js","index.js"],"names":["User","userData","photo","name","nickname","verified","verifiedIconStyle","display","className","src","alt","style","PostDate","date","PostContent","contentData","text","image","PostOptions","postData","id","likeFunc","commentFunc","shareFunc","comments","sharing","likes","commented","color","onClick","shared","liked","Post","this","props","data","React","Component","AddForm","state","author","img","handleInputChange","event","target","value","setState","sentData","obj","Date","getDate","getData","setAuthor","e","marginBottom","width","height","backgroundColor","margin","textAlign","paddingTop","action","onChange","placeholder","type","initialState","setLike","payload","setShare","setComment","addPerson","console","log","Store","createStore","user","push","MainComponent","dispatch","like","comment","share","elements","map","key","WrappedMainComponent","connect","res","forEach","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.5ad3e197.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./user.css\"\r\n\r\nconst User = ({userData})=>{\r\n    const {photo,name,nickname, verified = false} = userData;\r\n    const verifiedIconStyle = {\r\n        display : !verified ? \"none\" : \"inline\"\r\n    };\r\n    return (\r\n        <div className=\"user\">\r\n            <img src={photo}  className=\"user-photo\" alt=\"userPhoto\"/>\r\n            <span className=\"user-name\">{name}</span>\r\n            <i style={verifiedIconStyle} className=\"fas fa-certificate verified-icon\"></i>\r\n            <span className=\"user-nickname\">{nickname}</span>\r\n        </div>\r\n    )\r\n};\r\nexport default User;","import React from \"react\";\r\nimport './post-date.css'\r\n\r\nconst PostDate = ({date})=>{\r\n  return <span className=\"post-date\">{date}</span>\r\n};\r\n\r\nexport default PostDate;\r\n","import React from \"react\";\r\nimport \"./post-content.css\"\r\n\r\nconst PostContent = ({contentData})=>{\r\n    const {text,image} = contentData;\r\n    return (\r\n        <div className=\"post-content\">\r\n            <p className= \"post-content-text\">{text}</p>\r\n            <img className=\"post-content-img\" src={image} alt=\"\"/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PostContent;","import React from \"react\";\r\nimport \"./post-options.css\";\r\n\r\nconst PostOptions = ({postData,id,likeFunc,commentFunc,shareFunc})=>{\r\n  const {comments,sharing,likes} = postData;\r\n  return (\r\n      <div className=\"post-options\">\r\n        <div className=\"post-option-comments\">\r\n            <i className=\"far fa-comment-alt icon\"  style={ postData.commented? {color : 'white'}:null} onClick={()=>commentFunc(id)}></i>\r\n            <span>{comments}</span>\r\n        </div>\r\n          <div className=\"post-option-sharing\">\r\n              <i className=\"fas fa-retweet icon\" style={ postData.shared? {color : 'white'}:null} onClick={()=>shareFunc(id)}></i>\r\n              <span>{sharing}</span>\r\n          </div>\r\n          <div className=\"post-option-like\">\r\n              <i className=\"far fa-heart icon\"  style={ postData.liked? {color : 'red'}:null}onClick={()=>likeFunc(id)}></i>\r\n              <span>{likes}</span>\r\n          </div>\r\n          <div className=\"post-option-upload\">\r\n              <i className=\"fas fa-upload icon\"></i>\r\n          </div>\r\n      </div>\r\n  )\r\n};\r\nexport default PostOptions;","import React from \"react\";\r\nimport \"./post.css\"\r\nimport User from \"./user\";\r\nimport PostDate from \"./post-date\";\r\nimport PostContent from \"./post-content\";\r\nimport PostOptions from \"./post-options\";\r\n\r\nexport default class Post extends React.Component{\r\n\r\n    render() {\r\n        //console.log(this.props.data);\r\n        const {userData, contentData, postData} = this.props.data;\r\n        return (\r\n            <div className=\"post\">\r\n                <div className=\"top-panel\">\r\n                    <User userData={userData}/>\r\n                    <PostDate date={contentData.date}/>\r\n                </div>\r\n                <PostContent contentData={contentData}/>\r\n                <PostOptions postData={postData}\r\n                             id={this.props.id}\r\n                             likeFunc={this.props.likeFunc}\r\n                             commentFunc={this.props.commentFunc}\r\n                             shareFunc={this.props.shareFunc}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n};","import React from \"react\";\r\n\r\nexport default class AddForm extends React.Component{\r\n    state = {\r\n        author : 'skywalker',\r\n        text : '',\r\n        img : '',\r\n    };\r\n\r\n    handleInputChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({[name]: value});\r\n    };\r\n    sentData = ()=>{\r\n        let userData;\r\n        switch (this.state.author) {\r\n            case \"skywalker\":\r\n                userData = {\r\n                    name: \"Anakin skywalker\",\r\n                    photo: \"https://upload.wikimedia.org/wikipedia/en/thumb/7/74/Anakin-Jedi.jpg/220px-Anakin-Jedi.jpg\",\r\n                    nickname: \"@dart_vader\",\r\n                    verified: true\r\n                };\r\n                break;\r\n            case \"chubaka\":\r\n                userData = {\r\n                    name: \"Chubaka\",\r\n                    photo: \"https://st4.depositphotos.com/1034518/19593/i/450/depositphotos_195937664-stock-photo-cannes-france-may-2018-chewbacca.jpgі\",\r\n                    nickname: \"@chubaka\",\r\n                    verified: true\r\n                };\r\n                break;\r\n\r\n        }\r\n       let contentData = {\r\n            text: this.state.text,\r\n                image: this.state.img,\r\n                date: 'Apr  ' + new Date().getDate()\r\n        };\r\n        let postData =  {\r\n                id : 12,\r\n                comments: 0,\r\n                sharing: 0,\r\n                likes: 0,\r\n            liked : false,\r\n            commented:false,\r\n            shared : false\r\n        };\r\n\r\n           let obj = {\r\n               userData : userData,\r\n               contentData : contentData,\r\n               postData : postData,\r\n           };\r\n\r\n        this.props.getData(obj);\r\n        this.setState({author : 'skywalker', img : '',text : ''});\r\n        return obj;\r\n    };\r\n     setAuthor = (e)=>{this.setState({author : e.target.value})};\r\n    render() {\r\n        return(\r\n            <form  style={{marginBottom : '150px',width : '500px', height :'100px' ,backgroundColor : 'red', margin : '50px auto',textAlign : 'center',paddingTop: '30px'}} action=\"\">\r\n                <select name=\"author\" id=\"\" onChange={this.handleInputChange}>\r\n                    <option value=\"skywalker\" name='author'>skywalker</option>\r\n                    <option value=\"chubaka\"  name='author'>chubaka</option>\r\n                </select>\r\n                <input name = 'text' placeholder={\"post text\"} value={this.state.text} onChange={this.handleInputChange} type=\"text\"/>\r\n                <input name = 'img' placeholder={\"image url\"} value={this.state.img} onChange={this.handleInputChange} type=\"text\"/>\r\n                <button type=\"button\" onClick={this.sentData}> Add</button>\r\n            </form>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Post from \"./post/post\";\r\nimport {createStore} from \"redux\"\r\nimport {connect,Provider} from \"react-redux\"\r\nimport AddForm from \"./add-form/add-form\";\r\n\r\n\r\nconst initialState = {\r\n    data: [\r\n        {\r\n            userData: {\r\n                name: \"Anakin skywalker\",\r\n                photo: \"https://upload.wikimedia.org/wikipedia/en/thumb/7/74/Anakin-Jedi.jpg/220px-Anakin-Jedi.jpg\",\r\n                nickname: \"@dart_vader\",\r\n                verified: true\r\n            },\r\n            contentData: {\r\n                text: \"WTF? Who is Ray? Why she is Skywalker? Luke...?\",\r\n                image: \"https://specials-images.forbesimg.com/imageserve/5e63b3c8e1e617000759130e/960x0.jpg?fit=scale\",\r\n                date: 'Apr  ' + new Date().getDate()\r\n            },\r\n            postData: {\r\n                id : 1,\r\n                comments: 482,\r\n                sharing: 146,\r\n                likes: 887,\r\n                liked : false,\r\n                commented:false,\r\n                shared : false\r\n            }\r\n        }\r\n    ]\r\n\r\n};\r\n\r\nconst Action_Change_First_Name = 'Action_Change_First_Name';\r\nconst Action_Change_Last_Name = 'Action_Change_Last_Name';\r\nconst Action_Add_Person = 'Action_Add_Person';\r\nconst Action_Set_Like = 'Action_Set_Like';\r\nconst Action_Set_Comment = 'Action_Set_Comment';\r\nconst Action_Set_Share = 'Action_Set_Share';\r\n\r\nconst actionSetLike = {\r\n  type : Action_Set_Like,\r\n  payload: null\r\n};\r\nconst actionSetComment = {\r\n    type : Action_Set_Comment,\r\n    payload: null\r\n};\r\nconst actionSetShare = {\r\n    type : Action_Set_Share,\r\n    payload: null\r\n};\r\nconst actionAddPerson = {\r\n  type : Action_Add_Person,\r\n  payload: null\r\n};\r\nconst setLike = (id)=>{\r\n  return{\r\n      type : Action_Set_Like,\r\n      payload : id\r\n  }\r\n};\r\nconst setShare = (id)=>{\r\n    return{\r\n        type : Action_Set_Share,\r\n        payload : id\r\n    }\r\n};\r\nconst setComment = (id)=>{\r\n    return{\r\n        type : Action_Set_Comment,\r\n        payload : id\r\n    }\r\n};\r\nconst addPerson = (obj)=>{\r\n    console.log(obj);\r\n    return{\r\n        type : Action_Add_Person,\r\n        payload: obj\r\n    }\r\n};\r\n\r\nconst rootReducer = (state=initialState,action)=>{\r\n  let user = state.data[action.payload-1];\r\n   switch (action.type) {\r\n       case Action_Add_Person:\r\n           //console.log(state);\r\n           state.data.push(action.payload);\r\n           return {...state};\r\n       case Action_Set_Like:\r\n           if(user.postData.liked)\r\n           {\r\n               user.postData.likes -=1;\r\n               user.postData.liked = !user.postData.liked;\r\n           } else {\r\n               user.postData.likes += 1;\r\n               user.postData.liked = !user.postData.liked;\r\n           }\r\n           return {...state};\r\n\r\n       case Action_Set_Comment:\r\n           if(user.postData.commented)\r\n           {\r\n               user.postData.comments -=1;\r\n               user.postData.commented = !user.postData.commented;\r\n           } else {\r\n               user.postData.comments +=1;\r\n               user.postData.commented = !user.postData.commented;\r\n           }\r\n           return {...state};\r\n\r\n       case Action_Set_Share:\r\n           if(user.postData.shared)\r\n           {\r\n               user.postData.sharing -=1;\r\n               user.postData.shared = !user.postData.shared;\r\n           } else {\r\n               user.postData.sharing +=1;\r\n               user.postData.shared = !user.postData.shared;\r\n           }\r\n           return {...state};\r\n\r\n   }\r\n    return {...state};\r\n\r\n};\r\nconst Store = createStore(rootReducer);\r\nclass MainComponent extends React.Component{\r\n    getData = (obj)=>{\r\n        this.props.dispatch(addPerson(obj));\r\n    };\r\n    like = (id)=> {\r\n        this.props.dispatch(setLike(id));\r\n    };\r\n    comment = (id)=>{\r\n        this.props.dispatch(setComment(id));\r\n    };\r\n    share = (id)=>{\r\n        this.props.dispatch(setShare(id));\r\n    };\r\n    render() {\r\n        let id = 0;\r\n        console.log(this.props);\r\n        //const dispatch = this.props.dispatch;\r\n       const elements = this.props.data.map(value=>{\r\n           id ++;\r\n           return (<Post key = {id}\r\n                         id = {id}\r\n                         data={value}\r\n                         likeFunc = {this.like}\r\n                         commentFunc = {this.comment}\r\n                         shareFunc = {this.share}\r\n           />)\r\n       });\r\n        //console.log(elements);\r\n        return(\r\n            <div>\r\n                <AddForm getData = {this.getData}/>\r\n                {elements}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateProps = (state)=>{\r\n    let res = [];\r\n    state.data.forEach(value=>{\r\n       return res.push(value);\r\n    });\r\n    return {data:res};\r\n};\r\n\r\nconst WrappedMainComponent = connect(mapStateProps)(MainComponent);\r\n\r\nReactDOM.render(<Provider store={Store}>\r\n    <WrappedMainComponent/>\r\n</Provider>,document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}